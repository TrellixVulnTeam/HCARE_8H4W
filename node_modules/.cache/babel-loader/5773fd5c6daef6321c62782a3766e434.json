{"ast":null,"code":"var _jsxFileName = \"/Users/jan/github/HCARE/src/Redux/Reducer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { CHANGE_PRODUCT, SEND_ITEM_INDEX, ADD_TO_CART, REMOVE_ITEM } from '../Action/actionType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cartItem: []\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_PRODUCT:\n      return action.products;\n\n    case SEND_ITEM_INDEX:\n      return action.itemId;\n\n    case ADD_TO_CART:\n      {\n        const {\n          cartItem\n        } = state;\n        return {\n          cartItem: [...cartItem]\n        };\n      }\n\n    case REMOVE_ITEM:\n      {\n        const {\n          cartItem\n        } = state;\n        return {\n          cartItem: [...cartItem]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const contextApi = /*#__PURE__*/React.createContext({});\nexport const ContextApi = props => {\n  _s();\n\n  const [products, productDispatch] = useReducer(reducer, 'home');\n  const [itemId, itemIdDispatch] = useReducer(reducer, '0');\n  const [item, itemDispatch] = useReducer(reducer, initialState);\n  const [removeId, removeIdDispatch] = useReducer(reducer, initialState);\n  const value = {\n    products,\n    productDispatch,\n    itemId,\n    itemIdDispatch,\n    item,\n    itemDispatch,\n    removeId,\n    removeIdDispatch\n  };\n  return /*#__PURE__*/_jsxDEV(contextApi.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextApi, \"ywaoV9DKPXC9wD3gEMSS+kgPggc=\");\n\n_c = ContextApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextApi\");","map":{"version":3,"sources":["/Users/jan/github/HCARE/src/Redux/Reducer/index.js"],"names":["React","useReducer","CHANGE_PRODUCT","SEND_ITEM_INDEX","ADD_TO_CART","REMOVE_ITEM","initialState","cartItem","reducer","state","action","type","products","itemId","contextApi","createContext","ContextApi","props","productDispatch","itemIdDispatch","item","itemDispatch","removeId","removeIdDispatch","value","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,cADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,sBALP;;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,cAAL;AACE,aAAOQ,MAAM,CAACE,QAAd;;AACF,SAAKT,eAAL;AACE,aAAOO,MAAM,CAACG,MAAd;;AACF,SAAKT,WAAL;AAAkB;AAChB,cAAM;AAAEG,UAAAA;AAAF,YAAeE,KAArB;AACA,eAAO;AACLF,UAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ;AADL,SAAP;AAGD;;AACD,SAAKF,WAAL;AAAkB;AAChB,cAAM;AAAEE,UAAAA;AAAF,YAAeE,KAArB;AACA,eAAO;AACLF,UAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ;AADL,SAAP;AAGD;;AACD;AACE,aAAOE,KAAP;AAlBJ;AAoBD,CArBM;AAuBP,OAAO,MAAMK,UAAU,gBAAGd,KAAK,CAACe,aAAN,CAAoB,EAApB,CAAnB;AACP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAU;AAAA;;AAClC,QAAM,CAACL,QAAD,EAAWM,eAAX,IAA8BjB,UAAU,CAACO,OAAD,EAAU,MAAV,CAA9C;AACA,QAAM,CAACK,MAAD,EAASM,cAAT,IAA2BlB,UAAU,CAACO,OAAD,EAAU,GAAV,CAA3C;AACA,QAAM,CAACY,IAAD,EAAOC,YAAP,IAAuBpB,UAAU,CAACO,OAAD,EAAUF,YAAV,CAAvC;AACA,QAAM,CAACgB,QAAD,EAAWC,gBAAX,IAA+BtB,UAAU,CAACO,OAAD,EAAUF,YAAV,CAA/C;AACA,QAAMkB,KAAK,GAAE;AACXZ,IAAAA,QADW;AAEXM,IAAAA,eAFW;AAGXL,IAAAA,MAHW;AAIXM,IAAAA,cAJW;AAKXC,IAAAA,IALW;AAMXC,IAAAA,YANW;AAOXC,IAAAA,QAPW;AAQXC,IAAAA;AARW,GAAb;AAUA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEC,KAA5B;AAAA,cACGP,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBM;;GAAMT,U;;KAAAA,U","sourcesContent":["import React, { useReducer } from 'react';\nimport {\n  CHANGE_PRODUCT,\n  SEND_ITEM_INDEX,\n  ADD_TO_CART,\n  REMOVE_ITEM,\n} from '../Action/actionType';\n\nconst initialState = {\n  cartItem: [],\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_PRODUCT:\n      return action.products;\n    case SEND_ITEM_INDEX:\n      return action.itemId;\n    case ADD_TO_CART: {\n      const { cartItem } = state;\n      return {\n        cartItem: [...cartItem],\n      };\n    }\n    case REMOVE_ITEM: {\n      const { cartItem } = state;\n      return {\n        cartItem: [...cartItem],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const contextApi = React.createContext({});\nexport const ContextApi = (props) =>{\n  const [products, productDispatch] = useReducer(reducer, 'home');\n  const [itemId, itemIdDispatch] = useReducer(reducer, '0');\n  const [item, itemDispatch] = useReducer(reducer, initialState);\n  const [removeId, removeIdDispatch] = useReducer(reducer, initialState);\n  const value= {\n    products,\n    productDispatch,\n    itemId,\n    itemIdDispatch,\n    item,\n    itemDispatch,\n    removeId,\n    removeIdDispatch\n  }\n  return (\n    <contextApi.Provider value={value}>\n      {props.children}\n    </contextApi.Provider>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}